name: CI

on:
    pull_request:
    push:
        branches: [main,master, "feature/**"]

jobs:
    test:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            # set up Python
            - uses: actions/setup-python@v5
              with:
                  python-version: 3.11

            # install dependencies, caceh them
            - uses: actions/cache@v4
              with:
                path: ~/.cache/pip
                key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
            - name: Install backend deps
              run: | 
                pip install -r catalog-service/requirements.txt
                pip install -r order-service/requirements.txt
                pip install -r api-gateway/requirements.txt
                pip install pytest httpx

            - name: Install docker-compose
              run: sudo apt-get update && sudo apt-get install -y docker-compose

            - name: Start Postgres for migrations
              run: docker-compose up -d postgres
            
            # - name: Run Auth migrations
            #   run: docker-compose run --rm auth-service sh -c "alembic upgrade head"

            # - name: Run Catalog migrations
            #   run: docker-compose run --rm catalog-service sh -c "alembic upgrade head"

            # - name: Run Order migrations
            #   run: docker-compose run --rm order-service sh -c "alembic upgrade head"

            - name: Run tests
              run: pytest -q

            - name: Run Integration Tests
              run: |
                pip install httpx pytest
                pytest tests/integration -q
    
    build-and-push:
        needs: test
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        runs-on: ubuntu-latest
        permissions:
            packages: write
        steps:
            - uses: actions/checkout@v4

            - name: Set up QEMU (multi-arch, optional)
              uses: docker/setup-qemu-action@v3

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Log in to GHCR
              uses: docker/login-action@v3
              with: 
                registry: ghcr.io
                username: ${{ github.actor }}
                password: ${{ secrets.CR_PAT }}

            # Build and push each service image via a build matrix
            - name: Build & push images
              env:
                REPO: ${{ github.repository }}          # e.g. RajatG17/OverclocKart
              run: |
                # to-lowercase (works in bash 4+)
                REPO_LC=${REPO,,}         
                for svc in catalog-service order-service api-gateway auth-service; do
                  docker build -t ghcr.io/${REPO_LC}/${svc}:latest $svc
                  docker tag   ghcr.io/${REPO_LC}/${svc}:latest \
                              ghcr.io/${REPO_LC}/${svc}:${GITHUB_SHA}
                  docker push  ghcr.io/${REPO_LC}/${svc}:latest
                  docker push  ghcr.io/${REPO_LC}/${svc}:${GITHUB_SHA}
                done


