version: '3.8'

services:
  # Define the services for the application
  # Each service is a separate container
  postgres:
    image: postgres:16
    environment:
      POSTGRES_PASSWORD: rootpw
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./postgres-init/init-multiple-dbs.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U authuser -d authdb"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  auth-service:
    build: ./auth-service
    environment:
      - JWT_SECRET=${JWT_SECRET}
      - DATABASE_URL=postgresql+psycopg2://authuser:authpw@postgres:5432/authdb
      - DB_PATH=/data/users.db
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./auth-service:/app
    ports:
      - "5003:5003"

  catalog-service:
    build: ./catalog-service
    environment:
      - DATABASE_URL=postgresql+psycopg2://cataloguser:catalogpw@postgres:5432/catalogdb
      - DB_PATH=/data/catalog.db
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "5001:5001"
    volumes:
      - ./catalog-service:/app
    
    
  order-service:
    build: ./order-service
    ports:
      - "5002:5002"
    environment:
      - CATALOG_HOST=catalog-service     # DNS name provided by Compose
      - CATALOG_PORT=5001
      - DATABASE_URL=postgresql+psycopg2://orderuser:orderpw@postgres:5432/orderdb
      - DB_PATH=/data/orders.db
    depends_on: 
      postgres: 
        condition: service_healthy
      catalog-service:
        condition: service_started
    volumes:
      - ./order-service:/app
    
  api-gateway:
    build: ./api-gateway
    ports:
      - "8000:5000"
    environment:
      - JWT_SECRET=${JWT_SECRET}
      - CATALOG_HOST=catalog-service
      - CATALOG_PORT=5001
      - ORDER_HOST=order-service
      - ORDER_PORT=5002
      - AUTH_HOST=auth-service
      - AUTH_PORT=5003
    depends_on:
      catalog-service:
        condition: service_started
      order-service:
        condition: service_started
      auth-service:
        condition: service_started
  
  # TO IMPLEMENT: Uncomment to enable frontend service
  # frontend:
  #   build: ./frontend
  #   depends_on:
  #     - api-gateway
  #   ports:
  #     - "5173:80"

# Define the volumes for persistent data storage  
volumes:
  pgdata:
  catalog-data:
  orders-data:
  auth-data: